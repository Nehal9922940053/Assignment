{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Letsupgrade\\\\GITHUBASSIGNMENT\\\\Assignment\\\\Password-Encryption\\\\client\\\\src\\\\components\\\\DecryptForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DecryptForm = () => {\n  _s();\n  const [encryptedPassword, setEncryptedPassword] = useState('');\n  const [iv, setIV] = useState('');\n  const [key, setKey] = useState('');\n  const [decryptedPassword, setDecryptedPassword] = useState('');\n  const handleDecrypt = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/decrypt', {\n        encryptedPassword,\n        iv,\n        key\n      });\n      setDecryptedPassword(response.data.decryptedPassword);\n    } catch (error) {\n      console.error('Error decrypting password:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Decryption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Encrypted Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: encryptedPassword,\n        onChange: e => setEncryptedPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"IV:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: iv,\n        onChange: e => setIV(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: key,\n        onChange: e => setKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDecrypt,\n      children: \"Decrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), decryptedPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Decrypted Password: \", decryptedPassword]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(DecryptForm, \"rb4NJS5UQnMh6tNLIVKDbed5H7I=\");\n_c = DecryptForm;\nexport default DecryptForm;\nvar _c;\n$RefreshReg$(_c, \"DecryptForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DecryptForm","_s","encryptedPassword","setEncryptedPassword","iv","setIV","key","setKey","decryptedPassword","setDecryptedPassword","handleDecrypt","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sahil/Letsupgrade/GITHUBASSIGNMENT/Assignment/Password-Encryption/client/src/components/DecryptForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DecryptForm = () => {\r\n  const [encryptedPassword, setEncryptedPassword] = useState('');\r\n  const [iv, setIV] = useState('');\r\n  const [key, setKey] = useState('');\r\n  const [decryptedPassword, setDecryptedPassword] = useState('');\r\n\r\n  const handleDecrypt = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/decrypt', {\r\n        encryptedPassword,\r\n        iv,\r\n        key,\r\n      });\r\n      setDecryptedPassword(response.data.decryptedPassword);\r\n    } catch (error) {\r\n      console.error('Error decrypting password:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Password Decryption</h2>\r\n      <div>\r\n        <label>Encrypted Password:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={encryptedPassword}\r\n          onChange={(e) => setEncryptedPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>IV:</label>\r\n        <input type=\"text\" value={iv} onChange={(e) => setIV(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label>Key:</label>\r\n        <input type=\"text\" value={key} onChange={(e) => setKey(e.target.value)} />\r\n      </div>\r\n      <button onClick={handleDecrypt}>Decrypt</button>\r\n      {decryptedPassword && <p>Decrypted Password: {decryptedPassword}</p>}\r\n   </div>\r\n  )}\r\n\r\n  export default DecryptForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}