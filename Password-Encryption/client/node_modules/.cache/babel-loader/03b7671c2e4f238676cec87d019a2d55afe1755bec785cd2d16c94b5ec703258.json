{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Letsupgrade\\\\GITHUBASSIGNMENT\\\\Assignment\\\\Password-Encryption\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [encrypted, setEncrypted] = useState('');\n  const [decrypted, setDecrypted] = useState('');\n  const encryptPassword = async () => {\n    const res = await axios.get('/encrypt', {\n      params: {\n        password\n      }\n    });\n    setEncrypted(res.data.encrypted);\n    // Save IV and key for later decryption\n    localStorage.setItem('iv', res.data.iv);\n    localStorage.setItem('key', res.data.key);\n  };\n  const decryptPassword = async () => {\n    const iv = localStorage.getItem('iv');\n    const key = localStorage.getItem('key');\n    const res = await axios.get('/decrypt', {\n      params: {\n        encrypted,\n        iv,\n        key\n      }\n    });\n    setDecrypted(res.data.decrypted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: encryptPassword,\n      children: \"Encrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Encrypted: \", encrypted]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decryptPassword,\n      children: \"Decrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Decrypted: \", decrypted]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TFAQLlOfF4wxBLtvDHMFOrQad2c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","password","setPassword","encrypted","setEncrypted","decrypted","setDecrypted","encryptPassword","res","get","params","data","localStorage","setItem","iv","key","decryptPassword","getItem","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sahil/Letsupgrade/GITHUBASSIGNMENT/Assignment/Password-Encryption/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n\n  const [password, setPassword] = useState('');\n  const [encrypted, setEncrypted] = useState('');\n  const [decrypted, setDecrypted] = useState('');\n\n  const encryptPassword = async () => {\n    const res = await axios.get('/encrypt', { params: { password } });\n    setEncrypted(res.data.encrypted);\n    // Save IV and key for later decryption\n    localStorage.setItem('iv', res.data.iv); \n    localStorage.setItem('key', res.data.key);\n  }\n\n  const decryptPassword = async () => {\n    const iv = localStorage.getItem('iv');\n    const key = localStorage.getItem('key');\n    const res = await axios.get('/decrypt', {\n      params: {\n        encrypted,\n        iv,\n        key  \n      }\n    });\n    setDecrypted(res.data.decrypted);\n  }\n\n  return (\n    <div>\n      <input \n        type=\"text\"\n        value={password}\n        onChange={e => setPassword(e.target.value)} \n      />\n\n      <button onClick={encryptPassword}>Encrypt</button>\n\n      <div>\n        Encrypted: {encrypted}  \n      </div>\n\n      <button onClick={decryptPassword}>Decrypt</button>\n\n      <div>\n        Decrypted: {decrypted}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,UAAU,EAAE;MAAEC,MAAM,EAAE;QAAET;MAAS;IAAE,CAAC,CAAC;IACjEG,YAAY,CAACI,GAAG,CAACG,IAAI,CAACR,SAAS,CAAC;IAChC;IACAS,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEL,GAAG,CAACG,IAAI,CAACG,EAAE,CAAC;IACvCF,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEL,GAAG,CAACG,IAAI,CAACI,GAAG,CAAC;EAC3C,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMF,EAAE,GAAGF,YAAY,CAACK,OAAO,CAAC,IAAI,CAAC;IACrC,MAAMF,GAAG,GAAGH,YAAY,CAACK,OAAO,CAAC,KAAK,CAAC;IACvC,MAAMT,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,UAAU,EAAE;MACtCC,MAAM,EAAE;QACNP,SAAS;QACTW,EAAE;QACFC;MACF;IACF,CAAC,CAAC;IACFT,YAAY,CAACE,GAAG,CAACG,IAAI,CAACN,SAAS,CAAC;EAClC,CAAC;EAED,oBACEP,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAEC,CAAC,IAAIpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAEF7B,OAAA;MAAQ8B,OAAO,EAAErB,eAAgB;MAAAW,QAAA,EAAC;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElD7B,OAAA;MAAAoB,QAAA,GAAK,aACQ,EAACf,SAAS;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eAEN7B,OAAA;MAAQ8B,OAAO,EAAEZ,eAAgB;MAAAE,QAAA,EAAC;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElD7B,OAAA;MAAAoB,QAAA,GAAK,aACQ,EAACb,SAAS;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CAhDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}